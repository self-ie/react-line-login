{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["LineLogin","nonce","useEffect","callbackURL","query","url","Object","reqBody","grant_type","code","redirect_uri","client_id","client_secret","clientSecret","reqConfig","headers","axios","qs","res","console","decodedIdToken","algorithms","audience","clientID","issuer","err","getAccessToken","window","className","styles","onClick","lineAuthoriseURL","response_type","state","scope","prompt","max_age","bot_prompt","lineLogin","App","ReactDOM","render","document","getElementById"],"mappings":"qmBASA,MAEaA,EAAY,EAAC,kCAAiCC,YA4EzDC,oBAAU,KAnDcC,KACtB,IACIC,EADWC,aAAf,GACA,MAEA,GADsBC,uCAAtB,QACqB,CACnB,MAAMC,EAAU,CACdC,WADc,qBAEdC,KAAML,EAFQ,KAGdM,aAHc,iCAIdC,UAJc,EAKdC,cAAeC,GAEXC,EAAY,CAChBC,QAAS,CACP,eAAgB,sCAGpBC,iDAGIC,cAHJD,WAMSE,IACLC,wBACAA,YAAYD,EAAZC,MAEAA,yBACAA,YAAYD,OAAZC,UAEA,IACE,MAAMC,EAAiB,WAAWF,OAAX,WAA4C,CACjEG,WAAY,CADqD,SAEjEC,SAAUC,EAFuD,WAGjEC,OAHiE,yBAIjEvB,MAAOA,IAGTkB,iCACAA,eACA,MAAOM,GAEPN,kBAzBNH,MA4BUS,IACNN,mBAMNO,CAAeC,gBAAfD,QAIA,yBAAKE,UAAWC,GACd,yBAAKC,QAAS,IAjFA,MAEhB,MAaMC,EACJ,gDAdY,cAAsB,CAClCC,cADkC,OAElCrB,UAFkC,EAGlCsB,MAHkC,EAIlCC,MAJkC,uBAKlCjC,MALkC,EAMlCkC,OANkC,UAOlCC,QAZN,IAaMC,WAAY,WAMZ,+CAKFV,wBA4DsBW,GAAaV,UAAWC,M,OCpFnCU,MAJH,IACH,kBAACvC,EAAD,CAAWuB,SAAS,GAAGV,aAAa,GAAGoB,MAAM,GAAGhC,MAAM,KCA/DuC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.46040536.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport styles from './styles.module.css'\n\nimport axios from 'axios'\nimport url from 'url'\nimport qs from 'qs'\nimport querystring from 'querystring'\nimport jwt from 'jsonwebtoken'\n\nconst maxAge = 120\n\nexport const LineLogin = ({ clientID, clientSecret, state, nonce }) => {\n  const lineLogin = () => {\n    // Build query string.\n    const query = querystring.stringify({\n      response_type: 'code',\n      client_id: clientID,\n      state: state,\n      scope: 'profile openid email',\n      nonce: nonce,\n      prompt: 'consent',\n      max_age: maxAge,\n      bot_prompt: 'normal'\n    })\n    // The Callback URL specify in the Line Developer Console.\n    const redirectURI = 'http://localhost:3000/callback'\n    // Build the Line authorise URL.\n    const lineAuthoriseURL =\n      'https://access.line.me/oauth2/v2.1/authorize?' +\n      query +\n      '&redirect_uri=' +\n      redirectURI\n    // Redirect to external URL.\n    window.location.href = lineAuthoriseURL\n  }\n\n  const getAccessToken = (callbackURL) => {\n    var urlParts = url.parse(callbackURL, true)\n    var query = urlParts.query\n    var hasCodeProperty = Object.prototype.hasOwnProperty.call(query, 'code')\n    if (hasCodeProperty) {\n      const reqBody = {\n        grant_type: 'authorization_code',\n        code: query.code,\n        redirect_uri: 'http://localhost:3000/callback',\n        client_id: clientID,\n        client_secret: clientSecret\n      }\n      const reqConfig = {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }\n      axios\n        .post(\n          'https://api.line.me/oauth2/v2.1/token',\n          qs.stringify(reqBody),\n          reqConfig\n        )\n        .then((res) => {\n          console.log('payload:')\n          console.log(res.data)\n\n          console.log('id token:')\n          console.log(res.data.id_token)\n\n          try {\n            const decodedIdToken = jwt.verify(res.data.id_token, clientSecret, {\n              algorithms: ['HS256'],\n              audience: clientID.toString(),\n              issuer: 'https://access.line.me',\n              nonce: nonce\n            })\n\n            console.log('decoded id token:')\n            console.log(decodedIdToken)\n          } catch (err) {\n            // If token is invalid.\n            console.log(err)\n          }\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n\n  useEffect(() => {\n    getAccessToken(window.location.href)\n  })\n\n  return (\n    <div className={styles.App}>\n      <div onClick={() => lineLogin()} className={styles.lineButton} />\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { LineLogin } from 'react-line-login'\nimport 'react-line-login/dist/index.css'\n\nconst App = () => {\n  return <LineLogin clientID='' clientSecret='' state='' nonce='' />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}